"use strict";(self.webpackChunkrke_docs=self.webpackChunkrke_docs||[]).push([[5044],{7690:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var t=n(5893),i=n(1151);const r={title:"Recurring Snapshots"},o=void 0,c={id:"etcd-snapshots/recurring-snapshots/recurring-snapshots",title:"Recurring Snapshots",description:"Recurring snapshots are handled differently based on your version of RKE.",source:"@site/docs/etcd-snapshots/recurring-snapshots/recurring-snapshots.md",sourceDirName:"etcd-snapshots/recurring-snapshots",slug:"/etcd-snapshots/recurring-snapshots/",permalink:"/etcd-snapshots/recurring-snapshots/",draft:!1,unlisted:!1,editUrl:"https://github.com/rancher/rke1-docs/edit/main/docs/etcd-snapshots/recurring-snapshots/recurring-snapshots.md",tags:[],version:"current",lastUpdatedAt:1708986950,formattedLastUpdatedAt:"Feb 26, 2024",frontMatter:{title:"Recurring Snapshots"},sidebar:"mySidebar",previous:{title:"One-time Snapshots",permalink:"/etcd-snapshots/one-time-snapshots/"},next:{title:"Restoring from Backup",permalink:"/etcd-snapshots/restoring-from-backup/"}},d={},a=[{value:"Snapshot Service Logging",id:"snapshot-service-logging",level:3},{value:"Options for the <code>Etcd-Snapshot</code> Service",id:"options-for-the-etcd-snapshot-service",level:3},{value:"Using a custom CA certificate for S3",id:"using-a-custom-ca-certificate-for-s3",level:5},{value:"IAM Support for Storing Snapshots in S3",id:"iam-support-for-storing-snapshots-in-s3",level:3},{value:"Configuring the Snapshot Service in YAML",id:"configuring-the-snapshot-service-in-yaml",level:3},{value:"Snapshot Service Logging",id:"snapshot-service-logging-1",level:3},{value:"Options for the Local <code>Etcd-Snapshot</code> Service",id:"options-for-the-local-etcd-snapshot-service",level:3},{value:"Configuring the Snapshot Service in YAML",id:"configuring-the-snapshot-service-in-yaml-1",level:3}];function h(e){const s={a:"a",code:"code",em:"em",h3:"h3",h5:"h5",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components},{TabItem:n,Tabs:r}=s;return n||p("TabItem",!0),r||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"Recurring snapshots are handled differently based on your version of RKE."}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsxs)(n,{value:"RKE v0.2.0+",children:[(0,t.jsxs)(s.p,{children:["To schedule automatic recurring etcd snapshots, you can enable the ",(0,t.jsx)(s.code,{children:"etcd-snapshot"})," service with ",(0,t.jsx)(s.a,{href:"#options-for-the-etcd-snapshot-service",children:"extra configuration options"}),". ",(0,t.jsx)(s.code,{children:"etcd-snapshot"})," runs in a service container alongside the ",(0,t.jsx)(s.code,{children:"etcd"})," container. By default, the ",(0,t.jsx)(s.code,{children:"etcd-snapshot"})," service takes a snapshot for every node that has the ",(0,t.jsx)(s.code,{children:"etcd"})," role and stores them to local disk in ",(0,t.jsx)(s.code,{children:"/opt/rke/etcd-snapshots"}),"."]}),(0,t.jsxs)(s.p,{children:["If you set up the ",(0,t.jsx)(s.a,{href:"#options-for-the-etcd-snapshot-service",children:"options for S3"}),", the snapshot will also be uploaded to the S3 backend."]}),(0,t.jsx)(s.h3,{id:"snapshot-service-logging",children:"Snapshot Service Logging"}),(0,t.jsxs)(s.p,{children:["When a cluster is launched with the ",(0,t.jsx)(s.code,{children:"etcd-snapshot"})," service enabled, you can view the ",(0,t.jsx)(s.code,{children:"etcd-rolling-snapshots"})," logs to confirm backups are being created automatically."]}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'$ docker logs etcd-rolling-snapshots\n\ntime="2018-05-04T18:39:16Z" level=info msg="Initializing Rolling Backups" creation=1m0s retention=24h0m0s\ntime="2018-05-04T18:40:16Z" level=info msg="Created backup" name="2018-05-04T18:40:16Z_etcd" runtime=108.332814ms\ntime="2018-05-04T18:41:16Z" level=info msg="Created backup" name="2018-05-04T18:41:16Z_etcd" runtime=92.880112ms\ntime="2018-05-04T18:42:16Z" level=info msg="Created backup" name="2018-05-04T18:42:16Z_etcd" runtime=83.67642ms\ntime="2018-05-04T18:43:16Z" level=info msg="Created backup" name="2018-05-04T18:43:16Z_etcd" runtime=86.298499ms\n'})}),(0,t.jsxs)(s.h3,{id:"options-for-the-etcd-snapshot-service",children:["Options for the ",(0,t.jsx)(s.code,{children:"Etcd-Snapshot"})," Service"]}),(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Option"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"S3 Specific"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"interval_hours"})}),(0,t.jsxs)(s.td,{children:["The duration in hours between recurring backups. This supercedes the ",(0,t.jsx)(s.code,{children:"creation"})," option (which was used in RKE before v0.2.0) and will override it if both are specified. (Default: 12)"]}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"retention"})}),(0,t.jsxs)(s.td,{children:["The number of snapshots to retain before rotation. If the retention is configured in both ",(0,t.jsx)(s.code,{children:"etcd.retention"})," (time period to keep snapshots in hours), which was required in RKE before v0.2.0, and at ",(0,t.jsx)(s.code,{children:"etcd.backup_config.retention"})," (number of snapshots), the latter will be used. (Default: 6)"]}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"bucket_name"})}),(0,t.jsx)(s.td,{children:"S3 bucket name where backups will be stored"}),(0,t.jsx)(s.td,{children:"*"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"folder"})}),(0,t.jsxs)(s.td,{children:["Folder inside S3 bucket where backups will be stored. This is optional. ",(0,t.jsx)(s.em,{children:"Available as of v0.3.0"})]}),(0,t.jsx)(s.td,{children:"*"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"access_key"})}),(0,t.jsx)(s.td,{children:"S3 access key with permission to access the backup bucket."}),(0,t.jsx)(s.td,{children:"*"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"secret_key"})}),(0,t.jsx)(s.td,{children:"S3 secret key with permission to access the backup bucket."}),(0,t.jsx)(s.td,{children:"*"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"region"})}),(0,t.jsx)(s.td,{children:"S3 region for the backup bucket. This is optional."}),(0,t.jsx)(s.td,{children:"*"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"endpoint"})}),(0,t.jsx)(s.td,{children:"S3 regions endpoint for the backup bucket."}),(0,t.jsx)(s.td,{children:"*"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"custom_ca"})}),(0,t.jsx)(s.td,{children:"Custom certificate authority to use when connecting to the endpoint. Only required for private S3 compatible storage solutions. Available for RKE v0.2.5+."}),(0,t.jsx)(s.td,{children:"*"})]})]})]}),(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"--access-key"})," and ",(0,t.jsx)(s.code,{children:"--secret-key"})," options are not required if the ",(0,t.jsx)(s.code,{children:"etcd"})," nodes are AWS EC2 instances that have been configured with a suitable IAM instance profile."]}),(0,t.jsx)(s.h5,{id:"using-a-custom-ca-certificate-for-s3",children:"Using a custom CA certificate for S3"}),(0,t.jsxs)(s.p,{children:["The backup snapshot can be stored on a custom ",(0,t.jsx)(s.code,{children:"S3"})," backup like ",(0,t.jsx)(s.a,{href:"https://min.io/",children:"minio"}),". If the S3 backend uses a self-signed or custom certificate, provide a custom certificate using the option ",(0,t.jsx)(s.code,{children:"custom_ca"})," to connect to the S3 backend."]}),(0,t.jsx)(s.h3,{id:"iam-support-for-storing-snapshots-in-s3",children:"IAM Support for Storing Snapshots in S3"}),(0,t.jsx)(s.p,{children:"In addition to API access keys, RKE supports using IAM roles for S3 authentication. The cluster etcd nodes must be assigned an IAM role that has read/write access to the designated backup bucket on S3. Also, the nodes must have network access to the S3 endpoint specified."}),(0,t.jsxs)(s.p,{children:["Below is an ",(0,t.jsx)(s.a,{href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_s3_rw-bucket.html",children:"example IAM policy"})," that would allow nodes to store and retrieve backups from S3:"]}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Sid": "ListObjectsInBucket",\n            "Effect": "Allow",\n            "Action": ["s3:ListBucket"],\n            "Resource": ["arn:aws:s3:::bucket-name"]\n        },\n        {\n            "Sid": "AllObjectActions",\n            "Effect": "Allow",\n            "Action": "s3:*Object",\n            "Resource": ["arn:aws:s3:::bucket-name/*"]\n        }\n    ]\n}\n'})}),(0,t.jsxs)(s.p,{children:["For details on giving an application access to S3, refer to the AWS documentation on ",(0,t.jsx)(s.a,{href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html",children:"Using an IAM Role to Grant Permissions to Applications Running on Amazon EC2 Instances."})]}),(0,t.jsx)(s.h3,{id:"configuring-the-snapshot-service-in-yaml",children:"Configuring the Snapshot Service in YAML"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'services:\n  etcd:\n    backup_config:\n      interval_hours: 12\n      retention: 6\n      s3backupconfig:\n        access_key: S3_ACCESS_KEY\n        secret_key: S3_SECRET_KEY\n        bucket_name: s3-bucket-name\n        region: ""\n        folder: "" # Optional - Available as of v0.3.0\n        endpoint: s3.amazonaws.com\n        custom_ca: |-\n          -----BEGIN CERTIFICATE-----\n          $CERTIFICATE\n          -----END CERTIFICATE-----\n'})})]}),(0,t.jsxs)(n,{value:"RKE before v0.2.0",children:[(0,t.jsxs)(s.p,{children:["To schedule automatic recurring etcd snapshots, you can enable the ",(0,t.jsx)(s.code,{children:"etcd-snapshot"})," service with ",(0,t.jsx)(s.a,{href:"#options-for-the-local-etcd-snapshot-service",children:"extra configuration options"}),". ",(0,t.jsx)(s.code,{children:"etcd-snapshot"})," runs in a service container alongside the ",(0,t.jsx)(s.code,{children:"etcd"})," container. By default, the ",(0,t.jsx)(s.code,{children:"etcd-snapshot"})," service takes a snapshot for every node that has the ",(0,t.jsx)(s.code,{children:"etcd"})," role and stores them to local disk in ",(0,t.jsx)(s.code,{children:"/opt/rke/etcd-snapshots"}),"."]}),(0,t.jsxs)(s.p,{children:["RKE saves a backup of the certificates, i.e. a file named ",(0,t.jsx)(s.code,{children:"pki.bundle.tar.gz"}),", in the same location. The snapshot and pki bundle file are required for the restore process in versions before v0.2.0."]}),(0,t.jsx)(s.h3,{id:"snapshot-service-logging-1",children:"Snapshot Service Logging"}),(0,t.jsxs)(s.p,{children:["When a cluster is launched with the ",(0,t.jsx)(s.code,{children:"etcd-snapshot"})," service enabled, you can view the ",(0,t.jsx)(s.code,{children:"etcd-rolling-snapshots"})," logs to confirm backups are being created automatically."]}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'$ docker logs etcd-rolling-snapshots\n\ntime="2018-05-04T18:39:16Z" level=info msg="Initializing Rolling Backups" creation=1m0s retention=24h0m0s\ntime="2018-05-04T18:40:16Z" level=info msg="Created backup" name="2018-05-04T18:40:16Z_etcd" runtime=108.332814ms\ntime="2018-05-04T18:41:16Z" level=info msg="Created backup" name="2018-05-04T18:41:16Z_etcd" runtime=92.880112ms\ntime="2018-05-04T18:42:16Z" level=info msg="Created backup" name="2018-05-04T18:42:16Z_etcd" runtime=83.67642ms\ntime="2018-05-04T18:43:16Z" level=info msg="Created backup" name="2018-05-04T18:43:16Z_etcd" runtime=86.298499ms\n'})}),(0,t.jsxs)(s.h3,{id:"options-for-the-local-etcd-snapshot-service",children:["Options for the Local ",(0,t.jsx)(s.code,{children:"Etcd-Snapshot"})," Service"]}),(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Option"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Snapshot"})}),(0,t.jsxs)(s.td,{children:["By default, the recurring snapshot service is disabled. To enable the service, you need to define it as part of ",(0,t.jsx)(s.code,{children:"etcd"})," and set it to ",(0,t.jsx)(s.code,{children:"true"}),"."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Creation"})}),(0,t.jsxs)(s.td,{children:["By default, the snapshot service will take snapshots every 5 minutes (",(0,t.jsx)(s.code,{children:"5m0s"}),"). You can change the time between snapshots as part of the ",(0,t.jsx)(s.code,{children:"creation"})," directive for the ",(0,t.jsx)(s.code,{children:"etcd"})," service."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Retention"})}),(0,t.jsxs)(s.td,{children:["By default, all snapshots are saved for 24 hours (",(0,t.jsx)(s.code,{children:"24h"}),") before being deleted and purged. You can change how long to store a snapshot as part of the ",(0,t.jsx)(s.code,{children:"retention"})," directive for the ",(0,t.jsx)(s.code,{children:"etcd"})," service."]})]})]})]}),(0,t.jsx)(s.h3,{id:"configuring-the-snapshot-service-in-yaml-1",children:"Configuring the Snapshot Service in YAML"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"services:\n    etcd:\n      snapshot: true\n      creation: 5m0s\n      retention: 24h\n"})})]})]})]})}function l(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function p(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>o});var t=n(7294);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);